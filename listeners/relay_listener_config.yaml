# Relay Listener Configuration
# ===========================
#
# HISTORY & LEARNING:
# - Originally used hardcoded address 0x2905d7e4d048d29954f81b02171dd313f457a4a4
# - This address was found in existing relay data but appears to be legacy
# - Updated to use 0x9c9aA90363630d4ab1D9dbF416cc3BBC8d3Ed502 for Base chain
# - This reflects the current affiliate address used by Relay protocol
#
# WHAT THIS CONFIG IS ATTEMPTING:
# - Configure Relay listener for affiliate fee detection
# - Define RPC endpoints for Base chain (primary focus)
# - Set affiliate and claiming addresses for fee collection
# - Configure scanning parameters for optimal performance
#
# WHY RELAY SPECIFICALLY:
# - Relay is a cross-chain aggregation protocol
# - Important for understanding ShapeShift's cross-chain affiliate revenue
# - Base chain is primary focus due to recent deployment and activity
# - Different affiliate address than other protocols (0x9c9aA90363630d4ab1D9dbF416cc3BBC8d3Ed502)
#
# CURRENT STATUS:
# - Working configuration for Base chain
# - Uses Alchemy RPC for reliable connection
# - Conservative scanning parameters for stability
# - Ready for production use

# Affiliate Address Configuration
# =============================
# These addresses define where affiliate fees are sent and claimed
affiliate_address: "0x9c9aA90363630d4ab1D9dbF416cc3BBC8d3Ed502"  # Current Relay affiliate (Base chain)
claiming_address: "0x9c9aA90363630d4ab1D9dbF416cc3BBC8d3Ed502"   # Address that claims collected fees

# Chain Configuration
# ==================
# Currently focused on Base chain as primary deployment
chains:
  - name: base                    # Chain identifier
    rpc_url: https://base-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}  # Alchemy RPC endpoint
    chain_id: 8453                # Base chain ID
    start_block: 32900000         # Base deployment block (conservative start)
    chunk_size: 100               # Blocks per batch (conservative for stability)
    delay: 0.5                    # Seconds between batches (rate limiting)
    max_blocks: 1000              # Maximum blocks per scan run
    
# Scanning Configuration
# =====================
# Parameters that control how the listener operates
scanning:
  batch_size: 100                 # Number of blocks to process in each batch
  delay_between_batches: 0.5      # Seconds to wait between batches
  max_retries: 3                  # Maximum retry attempts on failure
  retry_delay: 1.0                # Seconds to wait before retry
  
# Event Signatures
# ================
# Keccak256 hashes of event definitions for filtering
# These are used to identify relevant blockchain events
events:
  affiliate_fee: "0x4a25d94a55df505cf9da1f1649d0381e2613c3c83c6a0a3df055ae0e82f6e4d7"  # Affiliate fee event
  transfer: "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"        # ERC20 transfer event
  
# Contract Addresses
# ==================
# Relay protocol contract addresses on Base chain
contracts:
  router: "0xF5042e6ffaC5a625D4E7848e0b01373D8eB9e222"      # Main Relay router
  alternative_router: "0xeeeeee9eC4769A09a76A83C7bC42b185872860eE"  # ETH router for Base
  
# Storage Configuration
# ===================
# Where to store transaction data and block tracking information
storage:
  csv_file: "csv_data/relay_transactions.csv"                    # Main transaction data
  block_tracker: "csv_data/block_tracking/relay_block_tracker.csv"  # Block progress tracking
  
# Logging Configuration
# ====================
# How much information to log during operation
logging:
  level: "INFO"                   # Log level: DEBUG, INFO, WARNING, ERROR
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  
# Performance Tuning
# ==================
# Settings to optimize performance and resource usage
performance:
  max_concurrent_requests: 5      # Maximum concurrent RPC requests
  request_timeout: 30             # RPC request timeout in seconds
  memory_limit_mb: 512            # Memory usage limit in MB 